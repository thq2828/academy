<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.academy.admin.dao.RoleMapper">
    <resultMap id="BaseResultMap" type="com.academy.core.pojo.Role">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="create_by" jdbcType="BIGINT" property="createBy"/>
        <result column="update_by" jdbcType="BIGINT" property="updateBy"/>
        <result column="update_at" jdbcType="BIGINT" property="updateAt"/>
        <result column="create_at" jdbcType="BIGINT" property="createAt"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.academy.core.pojo.Role">
        <result column="permissions" jdbcType="LONGVARCHAR" property="permissions"/>
    </resultMap>

    <sql id="Base_Column_List">
    id, name, status, create_by, update_by, update_at, create_at
  </sql>
    <sql id="Blob_Column_List">
    permissions
  </sql>

<!--***********根据id查找数据**************-->
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from role
        where id = #{id,jdbcType=BIGINT}
    </select>

    <!--***********根据id删除数据**************-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from role
    where id = #{id,jdbcType=BIGINT}
  </delete>

    <!--***********查询全部的数据进行分页**************-->
    <select id="selectRoles" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from role
        order by update_at desc
        limit #{start},#{size}
    </select>

    <!--***********查询数据总数**************-->
    <select id="selecrByCount" resultType="int">
        select count(*)
        from role
    </select>
    <!--***********根据ids查询数据**************-->
    <select id="selectByIds" parameterType="map" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from role
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        <if test="start!=null and size!=null">
            limit #{start},#{size}
        </if>
        order by update_at desc
    </select>
    <!--***********根据name查询数据**************-->
    <select id="selectByName" parameterType="String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from role
        where name=#{name}
    </select>
    <select id="selectByName1"  resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from role
        where name=#{name} and id<![CDATA[ != ]]>#{id}
    </select>
    <!--**********插入一条数据**************-->
    <insert id="insert" parameterType="com.academy.core.pojo.Role">
    insert into role (id, name, status, 
      create_by, update_by, update_at, 
      create_at, permissions)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=BIGINT}, #{updateBy,jdbcType=BIGINT}, #{updateAt,jdbcType=BIGINT}, 
      #{createAt,jdbcType=BIGINT}, #{permissions,jdbcType=LONGVARCHAR})
  </insert>
    <!--***********动态插入数据**************-->
    <insert id="insertSelective" parameterType="com.academy.core.pojo.Role">
        insert into role
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateAt != null">
                update_at,
            </if>
            <if test="createAt != null">
                create_at,
            </if>
            <if test="permissions != null">
                permissions,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=BIGINT},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=BIGINT},
            </if>
            <if test="updateAt != null">
                #{updateAt,jdbcType=BIGINT},
            </if>
            <if test="createAt != null">
                #{createAt,jdbcType=BIGINT},
            </if>
            <if test="permissions != null">
                #{permissions,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <!--***********动态更新数据**************-->
    <update id="updateByPrimaryKeySelective" parameterType="com.academy.core.pojo.Role">
        update role
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=BIGINT},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=BIGINT},
            </if>
            <if test="updateAt != null">
                update_at = #{updateAt,jdbcType=BIGINT},
            </if>
            <if test="createAt != null">
                create_at = #{createAt,jdbcType=BIGINT},
            </if>
            <if test="permissions != null">
                permissions = #{permissions,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.academy.core.pojo.Role">
    update role
    set name = #{name,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=BIGINT},
      update_by = #{updateBy,jdbcType=BIGINT},
      update_at = #{updateAt,jdbcType=BIGINT},
      create_at = #{createAt,jdbcType=BIGINT},
      permissions = #{permissions,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>